{"version":3,"sources":["components/Header.js","components/WeatherStyles.js","components/Details.js","components/Hourly.js","components/FormStyles.js","components/DailyWeather.js","components/Forecast.js","components/WeatherReport.js","components/SearchWeather.js","App.js","index.js"],"names":["Title","styled","h1","_templateObject","Subtitle","_templateObject2","Header","_ref","city","country","react_default","a","createElement","DailyStyleContainer","div","WeatherStyles_templateObject","DailyStyleItem","WeatherStyles_templateObject2","HourlyStyleItem","_templateObject3","_templateObject4","HourlyList","ul","_templateObject5","ErrorMessage","p","_templateObject6","Details","hour","sign","weather","icon","format","dt_txt","Math","round","main","temp","humidity","pressure","wind","speed","description","src","concat","alt","Hourly","day","map","components_Details","key","dt","Container","FormStyles_templateObject","Form","FormStyles_templateObject2","Button","button","FormStyles_templateObject3","DailyWeather","toggle","show","length","forecast","dateDay","parse","dateMonth","minTemp","maxTemp","forEach","temp_min","temp_max","push","includes","react","onClick","components_Hourly","Forecast","data","_useState","useState","day1","day2","day3","day4","day5","day6","_useState2","Object","slicedToArray","setShow","list","uniqueDays","item","filter","number","e","d","preventDefault","defineProperty","components_DailyWeather","id","GetWeather","asyncToGenerator","regenerator_default","mark","_callee","degrees","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","_x","_x2","_x3","apply","arguments","WeatherReport","_ref3","setData","useEffect","_callee2","_context2","useGetWeather","components_Forecast","Weather","props","f","c","tempCity","undefined","tempCountry","tempMap","search","state","setState","toggleClass","document","getElementById","classList","components_Header","react_google_autocomplete_default","placeholder","onPlaceSelected","place","details","formatted_address","split","last","objectSpread","url","types","onMouseEnter","onMouseLeave","className","components_WeatherReport","title","App","SearchWeather","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.8fa75ced.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n\ttext-align: center;\n\tfont-size: 6rem;\n\tfont-weight: bold;\n\tpadding: 1rem;\n`;\n\nconst Subtitle = styled.h1`\n\ttext-align: center;\n\tfont-size: 3rem;\n\tpadding: 0.5rem;\n\tmargin-bottom: 2rem;\n`;\n\nconst Header = ({ city, country }) => (\n\t<div>\n\t\t{\tcity ? <Title>Weather Report for {city + \", \" + country}</Title> :\n\t\t\t\t\t\t\t\t\t <Title>Weather Report</Title>\n\t\t}\n\t\t<Subtitle>Five days weather forecast</Subtitle>\n\t</div>\n\t);\n\nHeader.propTypes = {\n\tcity: PropTypes.string,\n\tcountry: PropTypes.string,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const DailyStyleContainer = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngrid-auto-rows: max-content;\nmargin: 1rem;\npadding: 1rem;\ngrid-gap: 3rem;\nwidth: -webkit-fill-available;\ngrid-auto-flow: dense;\n@media (max-width: 1000px) {\n  grid-template-columns: repeat(2, 1fr);\n}\n`;\n\nexport const DailyStyleItem = styled.div`\nfont-size: 2rem;\ntext-align: center;\nbackground-color: lightskyblue;\nborder-radius: .5rem;\npadding: 1rem;\nborder: 2px solid lightgray;\n  h1 {\n    padding: 0.5rem;\n    font-weight: 700;\n    &:nth-child(2) {\n      border-bottom: 3px solid blue;\n      margin-bottom: 1.5rem;\n    }\n  }\n  img {\n    width: 40%;\n    margin: 0 auto;\n  }\n`;\n\nexport const HourlyStyleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: -webkit-fill-available;\n`;\n\nexport const HourlyStyleItem = styled.div`\nfont-size: 2rem;\nmargin-left: auto;\nmargin-right: auto;\nbackground-color: lightskyblue;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(30rem,1fr));\ngrid-column: 1 / -1;\npadding: 1rem;\nmargin: 1rem;\ngrid-gap: 1rem;\n`;\n\nexport const HourlyList = styled.ul`\n  font-size: 2rem;\n  border: 1px solid black;\n  padding: 0.5rem;\n  background-color: #F3F4F6;\n  background-size: 80%;\n  position: relative;\n  text-align: center;\n  li > img {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 25%;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 5rem;\n  font-weight: bold;\n  color: blue;\n  margin-left: 50%;\n  margin-top: 5rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HourlyList } from './WeatherStyles';\nimport { format } from 'date-fns';\n\nconst Details = ({ hour }) => {\n  if (!hour) return null;\n  let sign = hour.weather[0].icon;\n  return (\n    <HourlyList>\n      <li>Time: {format(hour.dt_txt, \"hh:mm A\")}</li>\n      <li>Temperature: {Math.round(hour.main.temp)}˚</li>\n      <li>Humidity: {Math.round(hour.main.humidity)}%</li>\n      <li>Pressure: {Math.round(hour.main.pressure)}&nbsp;hPa</li>\n      <li>Wind: {Math.round(hour.wind.speed)}&nbsp;mph</li>\n      <li>Description: {hour.weather[0].description}</li>\n      <li><img\n        src={`https://openweathermap.org/img/w/${sign}.png`} alt=\"\"/></li>\n    </HourlyList>\n  );\n};\n\nDetails.propTypes = {\n  hour: PropTypes.shape({\n    dt_txt: PropTypes.string,\n    main: PropTypes.shape({\n      temp: PropTypes.number,\n      humidity: PropTypes.number,\n      pressure: PropTypes.number,\n    }),\n    wind: PropTypes.shape({\n      speed: PropTypes.number\n    }),\n    weather: PropTypes.array\n  })\n};\n\nexport default Details;\n","import React from 'react';\nimport Details from './Details';\nimport { HourlyStyleItem } from './WeatherStyles';\n\nconst Hourly = ({ day }) => {\n  if (!day) return null;\n  return (\n    <HourlyStyleItem>\n      {day.map(hour => {\n        return <Details key={hour.dt} hour={hour}/>;\n      })}\n    </HourlyStyleItem>\n  );\n};\n\nexport default Hourly;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n  justify-content: space-around;\n\n  iframe {\n    width: 90%;\n    height: 50rem;\n    margin: 2rem;\n    border: 0.5rem solid lightskyblue;\n    border-radius: 0.5rem;\n  }\n  @media (max-width: 1000px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const Form = styled.div`\n  text-align: center;\n  font-size: 2rem;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-self: baseline;\n\n  input {\n    width: 30rem;\n    border: 1px solid lightgray;\n    border-radius: 2rem;\n    background-color: lightskyblue;\n    font-size: 2rem;\n    padding: 0.5rem;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid black;\n  border-radius: 2rem;\n  width: 15rem;\n  padding: 0.5rem;\n  background-color: blue;\n  color: azure;\n  margin: 0 auto;\n  cursor: pointer;\n  margin-top: 2rem;\n  }\n\n  &:hover {\n  background-color: red;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport Hourly from './Hourly';\nimport PropTypes from \"prop-types\";\nimport { format, parse } from 'date-fns';\nimport { Button } from './FormStyles';\nimport { DailyStyleItem } from './WeatherStyles';\n\nconst DailyWeather = ({ day, toggle, show }) => {\n    if (!day || day.length === 0) return null;\n    let dateDay = format(parse(day[0].dt_txt), 'dddd');\n    let dateMonth = format(parse(day[0].dt_txt), 'MMM DD');\n    let minTemp = 120;\n    let maxTemp = 0;\n    let description = [];\n    let forecast;\n      day.forEach(hour => {\n        if (minTemp > hour.main.temp_min) minTemp = hour.main.temp_min;\n        if (maxTemp < hour.main.temp_max) maxTemp = hour.main.temp_max;\n        description.push(hour.weather[0].main);\n      });\n    if (description.includes(\"Rain\")) {\n      forecast = \"https://openweathermap.org/img/w/10d.png\";\n    } else if (description.includes(\"Snow\")) {\n      forecast = \"https://openweathermap.org/img/w/13d.png\";\n    } else if (description.includes(\"Clouds\")) {\n      forecast = \"https://openweathermap.org/img/w/03d.png\";\n    } else {\n      forecast = \"https://openweathermap.org/img/w/01d.png\";\n    };\n    return (\n      <Fragment>\n        <DailyStyleItem>\n          <h1>{ dateDay }</h1>\n          <h1>{ dateMonth }</h1>\n          <h3><img src={forecast} alt=\"\"/></h3>\n          <h3>min: { Math.round(minTemp) }˚</h3>\n          <h3>max: { Math.round(maxTemp) }˚</h3>\n          <Button\n            onClick={toggle}>\n              {show ? 'close' : 'details'}\n          </Button>\n        </DailyStyleItem>\n        {show && <Hourly day={day} />}\n      </Fragment>\n    );\n}\n\nDailyWeather.propTypes = {\n  day: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default DailyWeather;\n","import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport DailyWeather from './DailyWeather';\nimport { DailyStyleContainer, ErrorMessage } from './WeatherStyles';\n\nconst Forecast = ({ data }) => {\n  let [show, setShow] = useState({\n    day1: false,\n    day2: false,\n    day3: false,\n    day4: false,\n    day5: false,\n    day6: false,\n  });\n  let { list } = data;\n  if (!list) return <ErrorMessage>City not found!</ErrorMessage>;\n  let uniqueDays = [];\n  list.forEach(item => {\n    let day = format(item.dt_txt, 'MMM DD');\n    if (!uniqueDays.includes(day)) uniqueDays.push(day);\n   });\n     let day1 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[0]);\n     let day2 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[1]);\n     let day3 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[2]);\n     let day4 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[3]);\n     let day5 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[4]);\n     let day6 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[5]);\n\n  const toggle = (day, number) => e => {\n    const d = 'day' + number;\n    e.preventDefault();\n    setShow({day1: false, day2: false, day3: false, day4: false, day5: false, day6: false, [d]: !show[d]})\n  }\n     return (\n       <div>\n         <DailyStyleContainer>\n           <DailyWeather day={day1} show={show.day1} toggle={toggle(show.day1, 1)}/>\n           <DailyWeather day={day2} show={show.day2} toggle={toggle(show.day2, 2)}/>\n           <DailyWeather day={day3} show={show.day3} toggle={toggle(show.day3, 3)}/>\n           <DailyWeather day={day4} show={show.day4} toggle={toggle(show.day4, 4)}/>\n           <DailyWeather day={day5} show={show.day5} toggle={toggle(show.day5, 5)}/>\n           <DailyWeather day={day6} show={show.day6} toggle={toggle(show.day6, 6)}/>\n           { uniqueDays.length === 6 || <div id=\"extra\"></div>}\n        </DailyStyleContainer>\n      </div>\n    )\n};\n\nexport default Forecast;\n","import React, { useState, useEffect } from 'react';\nimport Forecast from './Forecast';\n\nconst GetWeather = async (city, country, degrees) => {\n  const result = await fetch(`//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=1ff011665e3637b91147bb172ff57517&units=${degrees}`);\n  const data = await result.json();\n  return data;\n}\n\nfunction useGetWeather(city, country, degrees) {\n  const [data, setData] = useState({});\n\n  useEffect(\n    async () => {\n      const result = await GetWeather(city, country, degrees);\n      setData(result);\n    },\n    [city, degrees]\n  );\n  return data;\n}\n\nconst WeatherReport = ({ city, country, degrees }) => {\n  const data = useGetWeather(city, country, degrees);\n\n return (\n   <Forecast data={data} />\n );\n};\n\nexport default WeatherReport;\n","import React, { useState, Fragment } from 'react';\nimport Header from './Header';\nimport WeatherReport from './WeatherReport';\nimport Autocomplete from 'react-google-autocomplete';\nimport { Button, Form, Container } from './FormStyles';\n\nconst Weather = props => {\n  let f = \"Fahrenheit\";\n  let c = \"Celsius\";\n  let [state, setState] = useState({\n    city: \"New York\",\n    country: \"USA\",\n    tempCity: undefined,\n    tempCountry: undefined,\n    degrees: 'imperial',\n    tempMap: undefined,\n    map: \"https://maps.google.com/?q=New+York,+NY,+USA&ftid=0x89c24fa5d33f083b:0xc80b8f06e177fe62&output=embed\",\n    search: true\n  });\n\n  const changeDegrees = e => {\n    e.preventDefault();\n    state.degrees === \"imperial\"\n    ? setState({...state, degrees: \"metric\"})\n    : setState({...state, degrees: \"imperial\"});\n  }\n\n  const search = e => {\n    e.preventDefault();\n    setState({...state, search: true, city: state.tempCity, country: state.tempCountry, map: state.tempMap});\n  }\n\n  const toggleClass = () => {\n\tdocument.getElementById(\"degrees\").classList.toggle('hide');\n};\n\n    return (\n      <Fragment>\n        <Form>\n          <Header city={state.city} country={state.country}/>\n          <Autocomplete\n            placeholder=\"select location\"\n              onPlaceSelected={ place => {\n                let details = place.formatted_address.split(\", \");\n                let last = details.length - 1;\n                setState({...state,\n                  tempCity: details[0],\n                  tempCountry: details[last],\n                  tempMap: place.url +  \"&output=embed\",\n                })\n              }}\n              types={['(cities)']}\n          />\n        <Button onClick={search}>\n          search\n        </Button>\n        <Button onClick={changeDegrees}\n            onMouseEnter={toggleClass}\n            onMouseLeave={toggleClass}\n        >\n            {state.degrees === \"imperial\" ? f : c}\n          </Button>\n          <p className=\"hide\"\n\t\t\t\t\t\tid=\"degrees\">click to change to {state.degrees === \"imperial\" ? c : f}</p>\n        </Form>\n        <Container>\n        {state.search && <WeatherReport city={state.city} country={state.country} degrees={state.degrees}/>}\n          <iframe title=\"map\" src={state.map} />\n    </Container>\n  </Fragment>\n    );\n}\n\nexport default Weather;\n","import React from 'react';\nimport SearchWeather from './components/SearchWeather';\nimport './reset.css';\n\nconst App = () => (\n    <SearchWeather />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}