{"version":3,"sources":["components/Header.js","components/FormStyles.js","components/WeatherStyles.js","components/DailyWeather.js","components/Details.js","components/Hourly.js","components/Forecast.js","components/WeatherReport.js","components/SearchWeather.js","App.js","index.js"],"names":["Title","styled","h1","_templateObject","Subtitle","_templateObject2","Header","_ref","city","country","react_default","a","createElement","Container","div","FormStyles_templateObject","Form","FormStyles_templateObject2","Button","button","_templateObject3","DailyStyleContainer","WeatherStyles_templateObject","DailyStyleItem","WeatherStyles_templateObject2","HourlyStyleContainer","WeatherStyles_templateObject3","HourlyStyleItem","_templateObject4","HourlyList","ul","_templateObject5","ErrorMessage","p","_templateObject6","DailyWeather","props","day","length","forecast","dateDay","format","parse","dt_txt","dateMonth","minTemp","maxTemp","description","forEach","hour","main","temp_min","temp_max","push","weather","includes","src","alt","Math","round","onClick","toggle","Details","sign","icon","temp","humidity","pressure","wind","speed","concat","Hourly","map","components_Details","key","dt","Forecast","data","_useState","useState","day1","day2","day3","day4","day5","day6","_useState2","Object","slicedToArray","show","setShow","list","uniqueDays","item","filter","number","e","d","document","getElementById","scrollIntoView","preventDefault","defineProperty","components_DailyWeather","id","components_Hourly","className","GetWeather","asyncToGenerator","regenerator_default","mark","_callee","degrees","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","_x","_x2","_x3","apply","arguments","WeatherReport","_ref3","setData","useEffect","_callee2","_context2","useGetWeather","components_Forecast","Weather","f","c","tempCity","undefined","tempCountry","tempMap","search","state","setState","toggleClass","classList","react","components_Header","react_google_autocomplete_default","placeholder","onPlaceSelected","place","details","formatted_address","split","last","objectSpread","url","types","onMouseEnter","onMouseLeave","components_WeatherReport","title","App","SearchWeather","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.18c1eaa5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n\ttext-align: center;\n\tfont-size: 6rem;\n\tfont-weight: bold;\n\tpadding: 1rem;\n`;\n\nconst Subtitle = styled.h1`\n\ttext-align: center;\n\tfont-size: 3rem;\n\tpadding: 0.5rem;\n\tmargin-bottom: 2rem;\n`;\n\nconst Header = ({ city, country }) => (\n\t<div>\n\t\t{\tcity ? <Title>Weather Report for {city + \", \" + country}</Title> :\n\t\t\t\t\t\t\t\t\t <Title>Weather Report</Title>\n\t\t}\n\t\t<Subtitle>Five days weather forecast</Subtitle>\n\t</div>\n\t);\n\nHeader.propTypes = {\n\tcity: PropTypes.string,\n\tcountry: PropTypes.string,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n  justify-content: space-around;\n\n  iframe {\n    width: 90%;\n    height: 50rem;\n    margin: 2rem;\n    border: 0.5rem solid lightskyblue;\n    border-radius: 0.5rem;\n  }\n  @media (max-width: 1000px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const Form = styled.div`\n  text-align: center;\n  font-size: 2rem;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-self: baseline;\n\n  input {\n    width: 30rem;\n    border: 1px solid lightgray;\n    border-radius: 2rem;\n    background-color: lightskyblue;\n    font-size: 2rem;\n    padding: 0.5rem;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid black;\n  border-radius: 2rem;\n  width: 15rem;\n  padding: 0.5rem;\n  background-color: blue;\n  color: azure;\n  margin: 0 auto;\n  cursor: pointer;\n  margin-top: 2rem;\n  }\n\n  &:hover {\n  background-color: red;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DailyStyleContainer = styled.div`\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngrid-auto-rows: max-content;\nmargin: 1rem;\npadding: 1rem;\ngrid-gap: 3rem;\nwidth: -webkit-fill-available;\n@media (max-width: 1000px) {\n  grid-template-columns: repeat(2, 1fr);\n}\n`;\n\nexport const DailyStyleItem = styled.div`\nfont-size: 2rem;\ntext-align: center;\nbackground-color: lightskyblue;\nborder-radius: .5rem;\npadding: 1rem;\nborder: 2px solid lightgray;\n  h1 {\n    padding: 0.5rem;\n    font-weight: 700;\n    &:nth-child(2) {\n      border-bottom: 3px solid blue;\n      margin-bottom: 1.5rem;\n    }\n  }\n  img {\n    width: 40%;\n    margin: 0 auto;\n  }\n`;\n\nexport const HourlyStyleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: -webkit-fill-available;\n`;\n\nexport const HourlyStyleItem = styled.div`\nfont-size: 2rem;\nmargin-left: auto;\nmargin-right: auto;\nbackground-color: lightskyblue;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(30rem,1fr));\npadding: 1rem;\nmargin: 1rem;\ngrid-gap: 1rem;\n`;\n\nexport const HourlyList = styled.ul`\n  font-size: 2rem;\n  border: 1px solid black;\n  padding: 0.5rem;\n  background-color: #F3F4F6;\n  background-size: 80%;\n  position: relative;\n  text-align: center;\n  li > img {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 25%;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: 5rem;\n  font-weight: bold;\n  color: blue;\n  margin-left: 50%;\n  margin-top: 5rem;\n`;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { format, parse } from 'date-fns';\nimport { Button } from './FormStyles';\nimport { DailyStyleItem } from './WeatherStyles';\n\nconst DailyWeather = props => {\n\n    if (!props.day || props.day.length === 0) return null;\n    let dateDay = format(parse(props.day[0].dt_txt), 'dddd');\n    let dateMonth = format(parse(props.day[0].dt_txt), 'MMM DD');\n    let minTemp = 120;\n    let maxTemp = 0;\n    let description = [];\n    let forecast;\n      props.day.forEach(hour => {\n        if (minTemp > hour.main.temp_min) minTemp = hour.main.temp_min;\n        if (maxTemp < hour.main.temp_max) maxTemp = hour.main.temp_max;\n        description.push(hour.weather[0].main);\n      });\n    if (description.includes(\"Rain\")) {\n      forecast = \"https://openweathermap.org/img/w/10d.png\";\n    } else if (description.includes(\"Snow\")) {\n      forecast = \"https://openweathermap.org/img/w/13d.png\";\n    } else if (description.includes(\"Clouds\")) {\n      forecast = \"https://openweathermap.org/img/w/03d.png\";\n    } else {\n      forecast = \"https://openweathermap.org/img/w/01d.png\";\n    };\n    return (\n      <DailyStyleItem>\n        <h1>{ dateDay }</h1>\n        <h1>{ dateMonth }</h1>\n        <h3><img src={forecast} alt=\"\"/></h3>\n        <h3>min: { Math.round(minTemp) }˚</h3>\n        <h3>max: { Math.round(maxTemp) }˚</h3>\n        <Button\n          onClick={props.toggle}>\n            details\n        </Button>\n      </DailyStyleItem>\n    );\n}\n\nDailyWeather.propTypes = {\n  day: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default DailyWeather;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HourlyList } from './WeatherStyles';\nimport { format } from 'date-fns';\n\nconst Details = ({ hour }) => {\n  if (!hour) return null;\n  let sign = hour.weather[0].icon;\n  return (\n    <HourlyList>\n      <li>Time: {format(hour.dt_txt, \"hh:mm A\")}</li>\n      <li>Temperature: {Math.round(hour.main.temp)}˚</li>\n      <li>Humidity: {Math.round(hour.main.humidity)}%</li>\n      <li>Pressure: {Math.round(hour.main.pressure)}&nbsp;hPa</li>\n      <li>Wind: {Math.round(hour.wind.speed)}&nbsp;mph</li>\n      <li>Description: {hour.weather[0].description}</li>\n      <li><img\n        src={`https://openweathermap.org/img/w/${sign}.png`} alt=\"\"/></li>\n    </HourlyList>\n  );\n};\n\nDetails.propTypes = {\n  hour: PropTypes.shape({\n    dt_txt: PropTypes.string,\n    main: PropTypes.shape({\n      temp: PropTypes.number,\n      humidity: PropTypes.number,\n      pressure: PropTypes.number,\n    }),\n    wind: PropTypes.shape({\n      speed: PropTypes.number\n    }),\n    weather: PropTypes.array\n  })\n};\n\nexport default Details;\n","import React from 'react';\nimport Details from './Details';\nimport { HourlyStyleItem } from './WeatherStyles';\n\nconst Hourly = ({ day }) => {\n  if (!day) return null;\n  return (\n    <HourlyStyleItem>\n      {day.map(hour => {\n        return <Details key={hour.dt} hour={hour}/>;\n      })}\n    </HourlyStyleItem>\n  );\n};\n\nexport default Hourly;\n","import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport DailyWeather from './DailyWeather';\nimport Hourly from './Hourly';\nimport { DailyStyleContainer, HourlyStyleContainer, ErrorMessage } from './WeatherStyles';\n\nconst Forecast = ({ data }) => {\n  let [show, setShow] = useState({\n    day1: false,\n    day2: false,\n    day3: false,\n    day4: false,\n    day5: false,\n    day6: false,\n  });\n  let { list } = data;\n  if (!list) return <ErrorMessage>City not found!</ErrorMessage>;\n  let uniqueDays = [];\n  list.forEach(item => {\n    let day = format(item.dt_txt, 'MMM DD');\n    if (!uniqueDays.includes(day)) uniqueDays.push(day);\n   });\n     let day1 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[0]);\n     let day2 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[1]);\n     let day3 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[2]);\n     let day4 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[3]);\n     let day5 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[4]);\n     let day6 = data.list.filter(day => format(day.dt_txt, 'MMM DD') === uniqueDays[5]);\n\n  const toggle = (day, number) => e => {\n    const d = 'day' + number;\n    const element = document.getElementById(\"details\");\n    element.scrollIntoView();\n    e.preventDefault();\n    setShow({day1: false, day2: false, day3: false, day4: false, day5: false, day6: false, [d]: !show[d]})\n  }\n     return (\n       <div>\n         <DailyStyleContainer>\n           <DailyWeather day={day1} toggle={toggle(show.day1, 1)}/>\n           <DailyWeather day={day2} toggle={toggle(show.day2, 2)}/>\n           <DailyWeather day={day3} toggle={toggle(show.day3, 3)}/>\n           <DailyWeather day={day4} toggle={toggle(show.day4, 4)}/>\n           <DailyWeather day={day5} toggle={toggle(show.day5, 5)}/>\n           <DailyWeather day={day6} toggle={toggle(show.day6, 6)}/>\n           { uniqueDays.length === 6 || <div id=\"extra\"></div>}\n        </DailyStyleContainer>\n        <HourlyStyleContainer>\n           {show.day1 && <Hourly className=\"details\" day={day1} />}\n           {show.day2 && <Hourly className=\"details\" day={day2} />}\n           {show.day3 && <Hourly className=\"details\" day={day3} />}\n           {show.day4 && <Hourly className=\"details\" day={day4} />}\n           {show.day5 && <Hourly className=\"details\" day={day5} />}\n           {show.day6 && <Hourly className=\"details\" day={day6} />}\n         </HourlyStyleContainer>\n         <p id=\"details\"></p>\n      </div>\n    )\n};\n\nexport default Forecast;\n","import React, { useState, useEffect } from 'react';\nimport Forecast from './Forecast';\n\nconst GetWeather = async (city, country, degrees) => {\n  const result = await fetch(`//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=1ff011665e3637b91147bb172ff57517&units=${degrees}`);\n  const data = await result.json();\n  return data;\n}\n\nfunction useGetWeather(city, country, degrees) {\n  const [data, setData] = useState({});\n\n  useEffect(\n    async () => {\n      const result = await GetWeather(city, country, degrees);\n      setData(result);\n    },\n    [city, degrees]\n  );\n  return data;\n}\n\nconst WeatherReport = ({ city, country, degrees }) => {\n  const data = useGetWeather(city, country, degrees);\n\n return (\n   <Forecast data={data} />\n );\n};\n\nexport default WeatherReport;\n","import React, { useState, Fragment } from 'react';\nimport Header from './Header';\nimport WeatherReport from './WeatherReport';\nimport Autocomplete from 'react-google-autocomplete';\nimport { Button, Form, Container } from './FormStyles';\n\nconst Weather = props => {\n  let f = \"Fahrenheit\";\n  let c = \"Celsius\";\n  let [state, setState] = useState({\n    city: \"New York\",\n    country: \"USA\",\n    tempCity: undefined,\n    tempCountry: undefined,\n    degrees: 'imperial',\n    tempMap: undefined,\n    map: \"https://maps.google.com/?q=New+York,+NY,+USA&ftid=0x89c24fa5d33f083b:0xc80b8f06e177fe62&output=embed\",\n    search: true\n  });\n\n  const changeDegrees = e => {\n    e.preventDefault();\n    state.degrees === \"imperial\"\n    ? setState({...state, degrees: \"metric\"})\n    : setState({...state, degrees: \"imperial\"});\n  }\n\n  const search = e => {\n    e.preventDefault();\n    setState({...state, search: true, city: state.tempCity, country: state.tempCountry, map: state.tempMap});\n  }\n\n  const toggleClass = () => {\n\tdocument.getElementById(\"degrees\").classList.toggle('hide');\n};\n\n    return (\n      <Fragment>\n        <Form>\n          <Header city={state.city} country={state.country}/>\n          <Autocomplete\n            placeholder=\"select location\"\n              onPlaceSelected={ place => {\n                let details = place.formatted_address.split(\", \");\n                let last = details.length - 1;\n                setState({...state,\n                  tempCity: details[0],\n                  tempCountry: details[last],\n                  tempMap: place.url +  \"&output=embed\",\n                })\n              }}\n              types={['(cities)']}\n          />\n        <Button onClick={changeDegrees}\n            onMouseEnter={toggleClass}\n            onMouseLeave={toggleClass}\n        >\n            {state.degrees === \"imperial\" ? f : c}\n          </Button>\n          <p className=\"hide\"\n\t\t\t\t\t\tid=\"degrees\">click to change to {state.degrees === \"imperial\" ? c : f}</p>\n          <Button onClick={search}>\n            search\n          </Button>\n        </Form>\n        <Container>\n        {state.search && <WeatherReport city={state.city} country={state.country} degrees={state.degrees}/>}\n          <iframe title=\"map\" src={state.map} />\n    </Container>\n  </Fragment>\n    );\n}\n\nexport default Weather;\n","import React from 'react';\nimport SearchWeather from './components/SearchWeather';\nimport './reset.css';\n\nconst App = () => (\n    <SearchWeather />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}